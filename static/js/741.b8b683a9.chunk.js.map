{"version":3,"file":"static/js/741.b8b683a9.chunk.js","mappings":"4MAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAInBC,EAAyB,SAAAP,GACpC,IAAMC,EAAWF,EAAeC,GAC1BQ,EAJoB,SAAAR,GAAK,OAAIA,EAAMQ,MAAV,CAIhBC,CAAaT,GAC5B,OAAOC,EAASO,QAAO,SAAAE,GAAO,OAAIA,EAAQC,KAAKC,cAAcC,SAASL,EAAxC,GAC/B,ECXD,EAAuB,0BAAvB,EAA4D,8BAA5D,EAAsG,+BAAtG,EAAkJ,gC,SCkDlJ,EA7CoB,WAClB,IAAMM,GAAWC,EAAAA,EAAAA,MACXd,GAAWe,EAAAA,EAAAA,IAAYjB,GAkB7B,OACE,kBAAMkB,SAjBa,SAAAC,GACnBA,EAAEC,iBACF,MAAyBD,EAAEE,cAAcC,SAAjCV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,OACRZ,EAAU,CACdC,KAAMA,EAAKY,MACXD,OAAQA,EAAOC,OAGbtB,EAASuB,MAAK,SAAAd,GAAO,OAAIA,EAAQC,OAASA,CAArB,IACvBc,MAAM,GAAD,OAAId,EAAJ,6BAGPG,GAASY,EAAAA,EAAAA,IAAWhB,IACpBQ,EAAES,OAAOC,QACV,EAG+BC,UAAWC,EAAzC,WACI,kBAAOD,UAAWC,EAAlB,mBACE,kBACEC,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,yIACNJ,UAAWC,EACXI,UAAQ,KAEZ,kBAAOL,UAAWC,EAAlB,sBACE,kBACEC,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,+FACNJ,UAAWC,EACXI,UAAQ,KAEZ,mBAAQH,KAAK,SAASF,UAAWC,EAAjC,2BAGP,E,UChDD,GAAgB,SAAW,8BAA8B,eAAiB,oCAAoC,aAAe,mCCgC7H,EA1BoB,WAClB,IAAM7B,GAAWe,EAAAA,EAAAA,IAAYT,GAEvBO,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIc,UAAWC,EAAAA,SAAf,SACG7B,EAASkC,KAAI,gBAAEC,EAAF,EAAEA,GAAIzB,EAAN,EAAMA,KAAMW,EAAZ,EAAYA,OAAZ,OACd,eAAaO,UAAWC,EAAAA,eAAxB,UACI,eAAGD,UAAWC,EAAAA,eAAd,UAAmCnB,EAAnC,KACA,gCAAQW,MACR,mBAAQe,QAAS,kBAAMvB,GAASwB,EAAAA,EAAAA,IAAcF,GAA7B,EAAmCP,UAAWC,EAAAA,aAA/D,wBAHKM,EADK,KASnB,E,UCtBD,EAAyB,uBAAzB,EAA6D,2BAA7D,EAAsG,4BCetG,EAZe,WACb,IAAMtB,GAAWC,EAAAA,EAAAA,MAGjB,OACE,iBAAKc,UAAWC,EAAhB,WACA,kBAAOD,UAAWC,EAAlB,qCACE,kBAAOD,UAAWC,EAAiBC,KAAK,OAAOQ,SAL9B,SAAArB,GAAC,OAAIJ,GAAS0B,EAAAA,EAAAA,GAAUtB,EAAEE,cAAcG,OAAvC,MAQvB,ECiBD,EAvBiB,WACf,IAAMT,GAAWC,EAAAA,EAAAA,MACXd,GAAWe,EAAAA,EAAAA,IAAYjB,GACvBK,GAAYY,EAAAA,EAAAA,IAAYb,GACxBG,GAAQU,EAAAA,EAAAA,IAAYX,GAM1B,OAJAoC,EAAAA,EAAAA,YAAU,WACR3B,GAAS4B,EAAAA,EAAAA,MACV,GAAE,CAAC5B,KAGF,iCACE,mEACA,SAAC,EAAD,KACA,SAAC,EAAD,IACCV,IAAcE,IAAS,kDACH,IAApBL,EAAS0C,QACR,+EACA,SAAC,EAAD,MAGP,C","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filter));\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formName\":\"ContactForm_formName__9bHzl\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/contactsOperations\";\nimport { selectContacts } from \"redux/contacts/contactsSelectors\";\n\nimport css from \"../ContactForm/ContactForm.module.css\";\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.currentTarget.elements;\n    const contact = {\n      name: name.value,\n      number: number.value,\n    }\n    \n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(contact));\n    e.target.reset();\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.formName}>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            className={css.formInput}\n            required\n          />\n        <label className={css.formName}>Number </label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            className={css.formInput}\n            required\n          />\n        <button type=\"submit\" className={css.formButton}>Add contact</button>\n      </form>\n  )\n}\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\",\"contacts__name\":\"ContactList_contacts__name__ItpdU\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\"};","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport css from \"../ContactList/ContactList.module.css\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/contactsOperations\";\nimport { selectFilteredContacts } from \"redux/contacts/contactsSelectors\";\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={css.contacts}>\n      {contacts.map(({id, name, number}) =>\n      <li key={id} className={css.contacts__item}>\n          <p className={css.contacts__name}>{name}:\n          <span> {number}</span>\n          <button onClick={() => dispatch(deleteContact(id))} className={css.deleteButton}>Delete</button>\n        </p>\n      </li>\n      )}</ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })),\n}\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterName\":\"Filter_filterName__Y2kKA\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport css from \"../Filter/Filter.module.css\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const changeFilter = e => dispatch(setFilter(e.currentTarget.value))\n  \n  return (\n    <div className={css.filter}>\n    <label className={css.filterName}>Find contacts by name:</label>\n      <input className={css.filterInput} type=\"text\" onChange={changeFilter} />\n    </div>\n  )\n}\n\nexport default Filter;","import ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"redux/contacts/contactsOperations\";\nimport { selectContacts, selectError, selectIsLoading } from \"redux/contacts/contactsSelectors\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Welcome to your personal phonebook ;)</h1>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length === 0 ?\n        <p>Sorry, there are no contacts in the phonebook yet.</p> :\n        <ContactList />}\n    </>\n  );\n}\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","selectFilter","contact","name","toLowerCase","includes","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","currentTarget","elements","number","value","some","alert","addContact","target","reset","className","css","type","pattern","title","required","map","id","onClick","deleteContact","onChange","setFilter","useEffect","getContacts","length"],"sourceRoot":""}